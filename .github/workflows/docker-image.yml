name: Build and push Docker image to AWS ECR

on:
  workflow_call:
    secrets:
      AWS_REGION:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  build_latest:
    runs-on: ubuntu-latest
    if: ${{ github.event.release.prerelease == false }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build the Docker image (latest)
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:latest,${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:${{ github.event.release.tag_name }}
          cache-from: type=registry,ref=${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:latest
          cache-to: type=inline
          build-args: |
            CDN_URL=https://cdn.docrevolution.nl/files

  build_dev:
    runs-on: ubuntu-latest
    if: ${{ github.event.release.prerelease == true && contains(github.event.release.tag_name, '-BETA') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build the Docker image (dev)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:dev
          cache-from: type=registry,ref=${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:dev
          cache-to: type=inline
          build-args: |
            CDN_URL=https://uploads.my-test.docrevolution.com/assets

  build_pre_release:
    runs-on: ubuntu-latest
    if: ${{ github.event.release.prerelease == true && contains(github.event.release.tag_name, '-RC') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build the Docker image (pre-release)
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:pre-release,${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:${{ github.event.release.tag_name }}
          cache-from: type=registry,ref=${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:pre-release
          cache-to: type=inline
          build-args: |
            CDN_URL=https://cdn.docrevolution.nl/files
